// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PedidoBebidas.Infraestrutura.Persistencia;

#nullable disable

namespace PedidoBebidas.Infraestrutura.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("PedidoBebidas.Dominio.Entidades.Contato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Principal")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("RevendaId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RevendaId");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("PedidoBebidas.Dominio.Entidades.Emissao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("Sucesso")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Emissoes");
                });

            modelBuilder.Entity("PedidoBebidas.Dominio.Entidades.EmissaoPedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EmissaoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmissaoId");

                    b.HasIndex("PedidoId");

                    b.ToTable("EmissaoPedido");
                });

            modelBuilder.Entity("PedidoBebidas.Dominio.Entidades.EmissaoTentativaEnvio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<Guid>("EmissaoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Sucesso")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmissaoId");

                    b.ToTable("EmissaoTentativasEnvio");
                });

            modelBuilder.Entity("PedidoBebidas.Dominio.Entidades.EnderecoEntrega", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevendaId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RevendaId");

                    b.ToTable("EnderecosEntrega");
                });

            modelBuilder.Entity("PedidoBebidas.Dominio.Entidades.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Identificador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevendaId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RevendaId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("PedidoBebidas.Dominio.Entidades.PedidoProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Produto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("PedidoProdutos");
                });

            modelBuilder.Entity("PedidoBebidas.Dominio.Entidades.Revenda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Revendas");
                });

            modelBuilder.Entity("PedidoBebidas.Dominio.Entidades.Telefone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevendaId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RevendaId");

                    b.ToTable("Telefones");
                });

            modelBuilder.Entity("PedidoBebidas.Dominio.Entidades.Contato", b =>
                {
                    b.HasOne("PedidoBebidas.Dominio.Entidades.Revenda", "Revenda")
                        .WithMany("Contatos")
                        .HasForeignKey("RevendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Revenda");
                });

            modelBuilder.Entity("PedidoBebidas.Dominio.Entidades.EmissaoPedido", b =>
                {
                    b.HasOne("PedidoBebidas.Dominio.Entidades.Emissao", "Emissao")
                        .WithMany("Pedidos")
                        .HasForeignKey("EmissaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PedidoBebidas.Dominio.Entidades.Pedido", "Pedido")
                        .WithMany("Emissoes")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emissao");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("PedidoBebidas.Dominio.Entidades.EmissaoTentativaEnvio", b =>
                {
                    b.HasOne("PedidoBebidas.Dominio.Entidades.Emissao", "Emissao")
                        .WithMany("TentativasEnvio")
                        .HasForeignKey("EmissaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emissao");
                });

            modelBuilder.Entity("PedidoBebidas.Dominio.Entidades.EnderecoEntrega", b =>
                {
                    b.HasOne("PedidoBebidas.Dominio.Entidades.Revenda", "Revenda")
                        .WithMany("EnderecosEntrega")
                        .HasForeignKey("RevendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Revenda");
                });

            modelBuilder.Entity("PedidoBebidas.Dominio.Entidades.Pedido", b =>
                {
                    b.HasOne("PedidoBebidas.Dominio.Entidades.Revenda", "Revenda")
                        .WithMany()
                        .HasForeignKey("RevendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Revenda");
                });

            modelBuilder.Entity("PedidoBebidas.Dominio.Entidades.PedidoProduto", b =>
                {
                    b.HasOne("PedidoBebidas.Dominio.Entidades.Pedido", "Pedido")
                        .WithMany("PedidoProdutos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("PedidoBebidas.Dominio.Entidades.Telefone", b =>
                {
                    b.HasOne("PedidoBebidas.Dominio.Entidades.Revenda", "Revenda")
                        .WithMany("Telefones")
                        .HasForeignKey("RevendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Revenda");
                });

            modelBuilder.Entity("PedidoBebidas.Dominio.Entidades.Emissao", b =>
                {
                    b.Navigation("Pedidos");

                    b.Navigation("TentativasEnvio");
                });

            modelBuilder.Entity("PedidoBebidas.Dominio.Entidades.Pedido", b =>
                {
                    b.Navigation("Emissoes");

                    b.Navigation("PedidoProdutos");
                });

            modelBuilder.Entity("PedidoBebidas.Dominio.Entidades.Revenda", b =>
                {
                    b.Navigation("Contatos");

                    b.Navigation("EnderecosEntrega");

                    b.Navigation("Telefones");
                });
#pragma warning restore 612, 618
        }
    }
}
